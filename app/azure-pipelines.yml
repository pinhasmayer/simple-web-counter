trigger:
- main

variables:
  dockerHubUsername: 'pmayer96'
  dockerHubImageName: 'simple-web-counter-python'
  imageName: '$(dockerHubUsername)/$(dockerHubImageName):$(Build.BuildId)'
  ec2Instance: 'ec2-18-194-132-45.eu-central-1.compute.amazonaws.com'
  ec2Username: 'centos'

stages:
- stage: Build
  displayName: Build and push image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'docker-hub-connection'
        repository: '$(dockerHubUsername)/$(dockerHubImageName)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(Build.BuildId)'

- stage: Deploy
  displayName: Deploy to EC2
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: none
    - task: SSH@0
      inputs:
        sshEndpoint: 'ec2-ssh-connection'
        inline: |
          # Check if the container with the name 'counter-service' exists
          if docker ps -a --format "{{.Names}}" | grep -q "counter-service"; then
            echo "Container 'counter-service' found."
            docker stop counter-service || echo "Error stopping container 'counter-service'."
            docker rm counter-service || echo "Error removing container 'counter-service'."
          else
            echo "Container 'counter-service' not found."
          fi
          # Pull the latest Docker image
          docker pull $(imageName) || echo "Error pulling image '$(imageName)'."
          # Run the new Docker container
          docker run -d -p 80:80 --name counter-service $(imageName) || echo "Error starting container 'counter-service'."
